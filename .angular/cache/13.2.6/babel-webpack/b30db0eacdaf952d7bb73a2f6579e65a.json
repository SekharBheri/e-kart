{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor() {\n      this.loggedInUserSubject = new BehaviorSubject(null); // BehaviorSubject will store the current state\n      // Observable to listen for changes in the logged-in user\n\n      this.loggedInUser$ = this.loggedInUserSubject.asObservable(); // Initialize the subject with the current logged-in user (if any)\n\n      const user = JSON.parse(sessionStorage.getItem('loggedInUser') || 'null');\n      this.loggedInUserSubject.next(user);\n    } // Function to set logged-in user and trigger subscribers\n\n\n    setLoggedInUser(user) {\n      sessionStorage.setItem('loggedInUser', JSON.stringify(user));\n      this.loggedInUserSubject.next(user);\n    } // Function to log out and clear the session storage\n\n\n    logout() {\n      sessionStorage.removeItem('loggedInUser');\n      this.loggedInUserSubject.next(null);\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)();\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}