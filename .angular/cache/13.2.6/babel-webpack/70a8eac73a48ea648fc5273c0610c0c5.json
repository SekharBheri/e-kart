{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../auth.service\";\nimport * as i3 from \"../notification.service\";\nimport * as i4 from \"@angular/common\";\n\nfunction CartComponent_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"currency\");\n    i0.ɵɵelementStart(3, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function CartComponent_li_4_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const i_r4 = restoredCtx.index;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.removeFromCart(i_r4);\n    });\n    i0.ɵɵtext(4, \"Remove\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\" \", item_r3.name, \" - \", i0.ɵɵpipeBind1(2, 3, item_r3.price), \" x \", item_r3.count, \" \");\n  }\n}\n\nfunction CartComponent_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Your cart is empty.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CartComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"h4\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"currency\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Total Amount: \", i0.ɵɵpipeBind1(3, 1, ctx_r2.getTotalAmount()), \"\");\n  }\n}\n\nexport let CartComponent = /*#__PURE__*/(() => {\n  class CartComponent {\n    constructor(router, authService, notificationService) {\n      this.router = router;\n      this.authService = authService;\n      this.notificationService = notificationService;\n      this.cartItems = [];\n    }\n\n    ngOnInit() {\n      this.loadCart();\n    }\n\n    loadCart() {\n      this.cartItems = JSON.parse(sessionStorage.getItem('cart') || '[]');\n    }\n\n    removeFromCart(index) {\n      const cartItem = this.cartItems[index];\n\n      if (cartItem.count > 1) {\n        cartItem.count--; // Decrease the count if more than 1\n      } else {\n        this.cartItems.splice(index, 1); // Remove item if count reaches 0\n      }\n\n      sessionStorage.setItem('cart', JSON.stringify(this.cartItems));\n    }\n\n    getTotalAmount() {\n      return this.cartItems.reduce((total, item) => total + item.price * item.count, 0);\n    }\n\n    checkout() {\n      if (this.cartItems.length === 0) {\n        this.notificationService.showNotification(\"Your cart is empty! Please add items before checking out.\", \"error\");\n      } else {\n        this.notificationService.showConfirmation('Checkout successful! Do you want to continue?', () => {\n          // Action for \"Yes\" - redirect to another page\n          this.router.navigate(['/shop']);\n        }, () => {\n          // Action for \"No\" - redirect to another page\n          this.authService.logout();\n          sessionStorage.clear();\n          this.router.navigate(['/login']);\n          this.notificationService.showNotification(\"You have successfully logged out!\", 'success');\n        }); //this.router.navigate(['/shop']); // Navigate back to the shop page\n      }\n    }\n\n  }\n\n  CartComponent.ɵfac = function CartComponent_Factory(t) {\n    return new (t || CartComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.NotificationService));\n  };\n\n  CartComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CartComponent,\n    selectors: [[\"app-cart\"]],\n    decls: 9,\n    vars: 4,\n    consts: [[1, \"container\"], [1, \"list-group\"], [\"class\", \"list-group-item d-flex justify-content-between align-items-center\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"class\", \"d-flex justify-content-between align-items-center mt-4\", 4, \"ngIf\"], [1, \"btn\", \"btn-success\", \"mt-4\", \"d-block\", \"mx-auto\", 3, \"disabled\", \"click\"], [1, \"list-group-item\", \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"btn\", \"btn-danger\", \"btn-sm\", 3, \"click\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-center\", \"mt-4\"]],\n    template: function CartComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Your Cart\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"ul\", 1);\n        i0.ɵɵtemplate(4, CartComponent_li_4_Template, 5, 5, \"li\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, CartComponent_p_5_Template, 2, 0, \"p\", 3);\n        i0.ɵɵtemplate(6, CartComponent_div_6_Template, 4, 3, \"div\", 4);\n        i0.ɵɵelementStart(7, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function CartComponent_Template_button_click_7_listener() {\n          return ctx.checkout();\n        });\n        i0.ɵɵtext(8, \"Checkout\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.cartItems);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.cartItems.length === 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.cartItems.length > 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.cartItems.length === 0);\n      }\n    },\n    directives: [i4.NgForOf, i4.NgIf],\n    pipes: [i4.CurrencyPipe],\n    encapsulation: 2\n  });\n  return CartComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}