{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../notification.service\";\nimport * as i3 from \"@angular/forms\";\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    constructor(router, notificationService) {\n      this.router = router;\n      this.notificationService = notificationService;\n      this.firstName = '';\n      this.lastName = '';\n      this.email = '';\n      this.password = '';\n      this.firstNameError = '';\n      this.lastNameError = '';\n      this.emailError = '';\n      this.passwordError = '';\n    }\n\n    onRegister() {\n      // Reset previous validation state\n      this.firstNameError = '';\n      this.lastNameError = '';\n      this.emailError = '';\n      this.passwordError = ''; // 1. First Name and Last Name Validation\n\n      const namePattern = /^[a-zA-Z]+$/;\n\n      if (!namePattern.test(this.firstName)) {\n        this.firstNameError = 'First Name should contain only alphabetic characters.';\n      }\n\n      if (!namePattern.test(this.lastName)) {\n        this.lastNameError = 'Last Name should contain only alphabetic characters.';\n      } // 2. Email Validation\n\n\n      const emailPattern = /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/;\n\n      if (!emailPattern.test(this.email)) {\n        this.emailError = 'Please enter a valid email.';\n      } else {\n        const users = JSON.parse(localStorage.getItem('users') || '[]');\n        const emailAlreadyRegistered = users.some(user => user.email === this.email);\n\n        if (emailAlreadyRegistered) {\n          this.emailError = 'This email is already registered.';\n        }\n      } // 3. Password Validation\n\n\n      const passwordPattern = /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[!@#$%^&*]).{6,}$/;\n\n      if (!passwordPattern.test(this.password)) {\n        this.passwordError = 'Password must be at least 6 characters long, contain at least one letter, one number, and one special character.';\n      } // If there are validation errors, return\n\n\n      if (this.firstNameError || this.lastNameError || this.emailError || this.passwordError) {\n        return;\n      } // Proceed with registration if there are no validation errors\n\n\n      const users = JSON.parse(localStorage.getItem('users') || '[]');\n      users.push({\n        firstName: this.firstName,\n        lastName: this.lastName,\n        email: this.email,\n        password: this.password\n      });\n      localStorage.setItem('users', JSON.stringify(users)); // Show success message\n\n      this.notificationService.showNotification('Registration Successful! Please login to continue.');\n      this.router.navigate(['/login']);\n    }\n\n  }\n\n  RegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.NotificationService));\n  };\n\n  RegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 31,\n    vars: 8,\n    consts: [[1, \"container\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"text\", \"name\", \"firstName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"text-danger\"], [\"type\", \"text\", \"name\", \"lastName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"email\", \"name\", \"email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"name\", \"password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mt-4\", \"d-block\", \"mx-auto\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Register\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onRegister();\n        });\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\");\n        i0.ɵɵtext(6, \"First Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.firstName = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 4);\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 2)(11, \"label\");\n        i0.ɵɵtext(12, \"Last Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.lastName = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 4);\n        i0.ɵɵtext(15);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 2)(17, \"label\");\n        i0.ɵɵtext(18, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_19_listener($event) {\n          return ctx.email = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 4);\n        i0.ɵɵtext(21);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"div\", 2)(23, \"label\");\n        i0.ɵɵtext(24, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_25_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 4);\n        i0.ɵɵtext(27);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"div\", 2)(29, \"button\", 8);\n        i0.ɵɵtext(30, \"Register\");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.firstName);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.firstNameError);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.lastName);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.lastNameError);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.email);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.emailError);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.passwordError);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n    encapsulation: 2\n  });\n  return RegisterComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}