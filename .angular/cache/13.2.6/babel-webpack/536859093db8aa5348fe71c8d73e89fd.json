{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../auth.service\";\nimport * as i3 from \"../notification.service\";\nimport * as i4 from \"@angular/common\";\n\nfunction ShopComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"div\", 9);\n    i0.ɵɵelement(2, \"img\", 10);\n    i0.ɵɵelementStart(3, \"div\", 11)(4, \"h5\", 12);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 13);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 14)(10, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function ShopComponent_div_7_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.decreaseItemCount(item_r1);\n    });\n    i0.ɵɵtext(11, \"-\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"span\", 16);\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function ShopComponent_div_7_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.increaseItemCount(item_r1);\n    });\n    i0.ɵɵtext(15, \"+\");\n    i0.ɵɵelementEnd()()()()();\n  }\n\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", item_r1.name);\n    i0.ɵɵproperty(\"src\", item_r1.imageUrl, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(item_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(8, 5, item_r1.price));\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r0.getCartItemCount(item_r1) || 0);\n  }\n}\n\nexport let ShopComponent = /*#__PURE__*/(() => {\n  class ShopComponent {\n    constructor(router, authService, notificationService) {\n      this.router = router;\n      this.authService = authService;\n      this.notificationService = notificationService;\n      this.items = [{\n        id: 1,\n        name: 'iPhone 16',\n        price: 1000,\n        count: 0,\n        imageUrl: 'assets/images/item1.jpeg'\n      }, {\n        id: 2,\n        name: 'Apple Watch 9',\n        price: 500,\n        count: 0,\n        imageUrl: 'assets/images/item2.jpeg'\n      }, {\n        id: 3,\n        name: 'AirPods',\n        price: 200,\n        count: 0,\n        imageUrl: 'assets/images/item3.jpeg'\n      }, {\n        id: 4,\n        name: 'iPhone 17',\n        price: 1200,\n        count: 0,\n        imageUrl: 'assets/images/item4.jpeg'\n      }, {\n        id: 5,\n        name: 'Apple Watch Ultra',\n        price: 800,\n        count: 0,\n        imageUrl: 'assets/images/item5.jpeg'\n      }, {\n        id: 6,\n        name: 'AirPods Pro',\n        price: 350,\n        count: 0,\n        imageUrl: 'assets/images/item6.jpeg'\n      }];\n      this.cartItemCount = 0;\n    }\n\n    ngOnInit() {\n      this.updateCartItemCount();\n    }\n\n    increaseItemCount(item) {\n      const cart = this.getCart();\n      const cartItem = cart.find(i => i.id === item.id); // Use unique 'id' for each item\n\n      if (cartItem) {\n        cartItem.count++; // Increase the count of the item in the cart\n      } else {\n        cart.push(Object.assign(Object.assign({}, item), {\n          count: 1\n        })); // Add new item to the cart with count set to 1\n      }\n\n      this.saveCart(cart);\n      this.updateCartItemCount();\n    }\n\n    decreaseItemCount(item) {\n      const cart = this.getCart();\n      const cartItem = cart.find(i => i.id === item.id);\n\n      if (cartItem && cartItem.count > 0) {\n        cartItem.count--; // Decrease the item count\n\n        if (cartItem.count === 0) {\n          const index = cart.indexOf(cartItem);\n          cart.splice(index, 1); // Remove the item from the cart if count is 0\n        }\n      }\n\n      this.saveCart(cart);\n      this.updateCartItemCount();\n    } // Utility method to update total cart item count\n\n\n    updateCartItemCount() {\n      const cart = this.getCart();\n      this.cartItemCount = cart.reduce((sum, item) => sum + item.count, 0); // Sum up all item counts\n    } // Method to get the count of a specific item from the cart\n\n\n    getCartItemCount(item) {\n      const cart = this.getCart();\n      const cartItem = cart.find(i => i.id === item.id);\n      return cartItem ? cartItem.count : 0; // Return the count or 0 if item is not found\n    }\n\n    checkout() {\n      const cart = this.getCart();\n\n      if (this.cartItemCount === 0 || cart.length === 0) {\n        this.notificationService.showNotification(\"Your cart is empty! Please add items before checking out.\", \"error\");\n      } else {\n        this.notificationService.showConfirmation('Checkout successful! Do you want to continue?', () => {\n          // Action for \"Yes\" - redirect to another page\n          this.router.navigate(['/shop']);\n          sessionStorage.removeItem('cart'); // Clear the cart after successful checkout\n\n          this.cartItemCount = 0; // Reset the cart item count\n        }, () => {\n          // Action for \"No\" - redirect to another page\n          this.authService.logout();\n          sessionStorage.clear();\n          this.router.navigate(['/login']);\n          this.notificationService.showNotification(\"You have successfully logged out!\", 'success');\n        });\n      }\n    } // Utility methods to get and save the cart in session storage\n\n\n    getCart() {\n      return JSON.parse(sessionStorage.getItem('cart') || '[]');\n    }\n\n    saveCart(cart) {\n      sessionStorage.setItem('cart', JSON.stringify(cart));\n    }\n\n  }\n\n  ShopComponent.ɵfac = function ShopComponent_Factory(t) {\n    return new (t || ShopComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.NotificationService));\n  };\n\n  ShopComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ShopComponent,\n    selectors: [[\"app-shop\"]],\n    decls: 13,\n    vars: 2,\n    consts: [[1, \"container\", 2, \"max-width\", \"1200px\", \"padding\", \"10px\"], [1, \"d-flex\", \"justify-content-between\"], [2, \"font-size\", \"18px\", \"font-weight\", \"bold\"], [1, \"row\"], [\"class\", \"col-md-4\", \"style\", \"max-width: 350px;\", 4, \"ngFor\", \"ngForOf\"], [1, \"d-flex\", \"justify-content-center\", \"mt-4\"], [\"routerLink\", \"/cart\", 1, \"btn\", \"btn-secondary\", \"me-2\", \"btn-lg\"], [1, \"btn\", \"btn-primary\", \"btn-lg\", 3, \"click\"], [1, \"col-md-4\", 2, \"max-width\", \"350px\"], [1, \"card\", \"h-100\"], [1, \"card-img-top\", 2, \"height\", \"180px\", \"width\", \"100%\", \"object-fit\", \"contain\", 3, \"src\", \"alt\"], [1, \"card-body\", \"custom-card-body\"], [1, \"card-title\"], [1, \"card-text\"], [1, \"d-flex\", \"justify-content-center\", \"align-items-center\", \"mt-auto\"], [1, \"btn\", \"btn-danger\", \"btn-sm\", 3, \"click\"], [1, \"mx-3\"], [1, \"btn\", \"btn-success\", \"btn-sm\", 3, \"click\"]],\n    template: function ShopComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Shop\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"span\", 2);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 3);\n        i0.ɵɵtemplate(7, ShopComponent_div_7_Template, 16, 7, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 5)(9, \"a\", 6);\n        i0.ɵɵtext(10, \"Go to Cart\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function ShopComponent_Template_button_click_11_listener() {\n          return ctx.checkout();\n        });\n        i0.ɵɵtext(12, \"Checkout\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\"Cart Items: \", ctx.cartItemCount, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.items);\n      }\n    },\n    directives: [i4.NgForOf, i1.RouterLinkWithHref],\n    pipes: [i4.CurrencyPipe],\n    encapsulation: 2\n  });\n  return ShopComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}